/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package interfaces;

import classes.Agenda;
import classes.Medico;
import classes.Paciente;
import classes.ProfissionalSaude;
import controles.ControleAgenda;
import controles.ControleMedico;
import enums.Especialidades;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Amanda
 */
public class TelaMarcarConsulta extends javax.swing.JFrame {

    String dataConvertida;
    Paciente paciente;
    ControleMedico controleMedico = new ControleMedico();
    ControleAgenda controleAgenda = new ControleAgenda();
    DefaultTableModel datasLiberadas;
    
    /**
     * Creates new form TelaInicialAdministrador
     */
    public TelaMarcarConsulta(Paciente paciente){
        initComponents();
        this.setLocationRelativeTo(null);
        this.paciente = paciente;
        LocalDate hoje = LocalDate.now();
        DateTimeFormatter formataData = DateTimeFormatter.ofPattern("dd/MM/yyyy");
        dataConvertida = hoje.format(formataData);
        
        datasLiberadas = (DefaultTableModel) tabelaDeDatas.getModel();
        
        preencheListaMedicos();
        desativarCampos();
    }
    
    private void preencheListaMedicos(){
        listaMedicos.removeAllItems();
        ArrayList<Medico> listaMedica = controleMedico.retornaListaMedica();
        if(listaMedica == null){
            JOptionPane.showMessageDialog(null, "Nenhum Médico Cadastrado no Sistema");
            new TelaInicialPaciente(paciente).setVisible(true);
            dispose();
        } else {
            for(Medico m : listaMedica){
                listaMedicos.addItem(m.getNome());
            }
        }
    }
    
    private void preencheTabela(ArrayList<Agenda> datas, Medico m){
        datasLiberadas.setRowCount(0);
        for(Agenda a : datas){
            switch (m.getEspecialidade()) {
                case 0 -> {
                    datasLiberadas.addRow(new Object[]{a.getData(), a.getHora(),
                    m.getNome(),Especialidades.UM.getEspecialidade()});
                }
                default -> JOptionPane.showMessageDialog(null, "Erro ao buscar especialidade");
            }
        }
    }

    private void desativarCampos(){
        dataSelecionada.setEditable(false);
        horaSelecionada.setEditable(false);
        medicoSelecionado.setEditable(false);
    }
    
    private void limparCampos(){
        dataSelecionada.setText("");
        horaSelecionada.setText("");
        medicoSelecionado.setText("");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenuItem1 = new javax.swing.JMenuItem();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabelaDeDatas = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        listaMedicos = new javax.swing.JComboBox<>();
        buscar = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        voltar = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel3 = new javax.swing.JLabel();
        dataSelecionada = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        medicoSelecionado = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        horaSelecionada = new javax.swing.JTextField();
        marcar = new javax.swing.JButton();
        jMenuBar2 = new javax.swing.JMenuBar();
        sair = new javax.swing.JMenu();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem2 = new javax.swing.JMenuItem();

        jMenuItem1.setText("jMenuItem1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        tabelaDeDatas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Data", "Horário", "Médico", "Especialidade"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tabelaDeDatas.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabelaDeDatasMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tabelaDeDatas);
        if (tabelaDeDatas.getColumnModel().getColumnCount() > 0) {
            tabelaDeDatas.getColumnModel().getColumn(0).setResizable(false);
            tabelaDeDatas.getColumnModel().getColumn(0).setPreferredWidth(5);
            tabelaDeDatas.getColumnModel().getColumn(1).setResizable(false);
            tabelaDeDatas.getColumnModel().getColumn(1).setPreferredWidth(5);
            tabelaDeDatas.getColumnModel().getColumn(2).setResizable(false);
            tabelaDeDatas.getColumnModel().getColumn(3).setResizable(false);
        }

        jLabel1.setText("Médico(a):");

        listaMedicos.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        buscar.setText("Buscar");
        buscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buscarActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel2.setText("Marcar Consulta");

        voltar.setText("Voltar");
        voltar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                voltarActionPerformed(evt);
            }
        });

        jLabel3.setText("Data:");

        jLabel4.setText("Hora:");

        jLabel5.setText("Médico(a): ");

        marcar.setText("Marcar");
        marcar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                marcarActionPerformed(evt);
            }
        });

        sair.setText("Sair");
        sair.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                sairMouseClicked(evt);
            }
        });
        sair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sairActionPerformed(evt);
            }
        });
        jMenuBar2.add(sair);

        jMenu1.setText("Consultas");

        jMenuItem2.setText("Marcar Consulta");
        jMenu1.add(jMenuItem2);

        jMenuBar2.add(jMenu1);

        setJMenuBar(jMenuBar2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 577, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(listaMedicos, javax.swing.GroupLayout.PREFERRED_SIZE, 396, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(buscar, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap(21, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(voltar, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(marcar, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jSeparator1, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(dataSelecionada, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(horaSelecionada, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(medicoSelecionado, javax.swing.GroupLayout.DEFAULT_SIZE, 157, Short.MAX_VALUE)))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(jLabel2)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(listaMedicos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(buscar))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 263, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(dataSelecionada, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(medicoSelecionado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(horaSelecionada, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(voltar)
                    .addComponent(marcar))
                .addGap(30, 30, 30))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void sairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sairActionPerformed
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_sairActionPerformed

    private void sairMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_sairMouseClicked
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_sairMouseClicked

    private void buscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buscarActionPerformed
        // TODO add your handling code here:
        
        ArrayList<Medico> listaMedica = controleMedico.retornaListaMedica();
        
        System.out.println(listaMedicos.getSelectedItem());
        
        for(Medico m : listaMedica){
            if(m.getNome().equals(listaMedicos.getSelectedItem())){
                ArrayList<Agenda> datas = controleMedico.datasDisponiveis(dataConvertida, m.getId());
                preencheTabela(datas, m);
                break;
            }
        }
        
    }//GEN-LAST:event_buscarActionPerformed

    private void tabelaDeDatasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabelaDeDatasMouseClicked
        // TODO add your handling code here:
        System.out.println(tabelaDeDatas.getSelectedRow());
        
        int linha = tabelaDeDatas.getSelectedRow();
        
        Object data = tabelaDeDatas.getValueAt(linha, 0);
        Object hora = tabelaDeDatas.getValueAt(linha, 1);
        Object nomeMedico = tabelaDeDatas.getValueAt(linha, 2);
        
        dataSelecionada.setText(data.toString());
        horaSelecionada.setText(hora.toString());
        medicoSelecionado.setText(nomeMedico.toString());
        
    }//GEN-LAST:event_tabelaDeDatasMouseClicked

    private void marcarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_marcarActionPerformed
        // TODO add your handling code here:
        if(dataSelecionada.getText().isBlank()){
            JOptionPane.showMessageDialog(null, "Nenhuma data selecionada!");
        } else {
            String data = dataSelecionada.getText();
            String hora = horaSelecionada.getText();
            String nomeMedico = medicoSelecionado.getText();
            
            Agenda agenda = new Agenda(0, data, hora, 0);
            
            ProfissionalSaude profissional = controleMedico.buscaProfissionalPorNome(nomeMedico);
            
            int resposta = JOptionPane.showConfirmDialog(null, "Tem certeza que deseja marcar a consulta?"
                    + "\nData: " + agenda.getData() + "\nHora: " + agenda.getHora()
                    + "\nMédico(a): " + profissional.getNome(),
                    "Marcar Consulta - Confirmação",JOptionPane.YES_NO_OPTION);
            
            if(resposta == JOptionPane.YES_OPTION){
                boolean confirmacao = controleAgenda.marcarConsulta(profissional.getId(), agenda, paciente.getId());
                if(confirmacao){
                    JOptionPane.showMessageDialog(null, "Consulta Marcada!");
                    preencheListaMedicos();
                    datasLiberadas.setRowCount(0);
                    limparCampos();
                } else {
                    JOptionPane.showMessageDialog(null, "Ops! Algo deu errado!");
                }
            } else {
                JOptionPane.showMessageDialog(null, "Okay! Voltando pra Tela Inicial!");
            }
        }
    }//GEN-LAST:event_marcarActionPerformed

    private void voltarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_voltarActionPerformed
        // TODO add your handling code here:
        new TelaInicialPaciente(paciente).setVisible(true);
        dispose();
    }//GEN-LAST:event_voltarActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buscar;
    private javax.swing.JTextField dataSelecionada;
    private javax.swing.JTextField horaSelecionada;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar2;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JComboBox<String> listaMedicos;
    private javax.swing.JButton marcar;
    private javax.swing.JTextField medicoSelecionado;
    private javax.swing.JMenu sair;
    private javax.swing.JTable tabelaDeDatas;
    private javax.swing.JButton voltar;
    // End of variables declaration//GEN-END:variables
}
